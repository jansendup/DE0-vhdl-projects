-------------------------------------------------------------------------------
-- Title      : Testbench for design "shift_reg"
-- Project    : Primatives component library.
-------------------------------------------------------------------------------
-- File       : shift_reg_tb.vhd
-- Author     : Jansen  <jansen@jansen-M1022E>
-- Company    : 
-- Created    : 2012-02-24
-- Last update: 2012-02-24
-- Platform   : 
-- Standard   : VHDL'93
-------------------------------------------------------------------------------
-- Description: 
-------------------------------------------------------------------------------
-- Copyright (c) 2012 
-------------------------------------------------------------------------------
-- Revisions  :
-- Date        Version  Author  Description
-- 2012-02-24  1.0      jansen	Created
-------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

architecture behaviour of shift_reg_tb is

  -- component generics
  constant N         : integer := 8;
  constant RESET_VAL : std_logic_vector;

  -- component ports
  signal clk_i, reset_i : std_logic;
  signal shift_nLoad_i  : std_logic;
  signal shift_en_i     : std_logic;
  signal serial_i       : std_logic;
  signal serial_o       : std_logic;
  signal data_i         : std_logic_vector(N - 1 downto 0);
  signal data_o         : std_logic_vector(N - 1 downto 0);

  -- clock
  signal Clk : std_logic := '1';

begin  -- architecture behaviour

  -- component instantiation
  DUT: entity work.shift_reg
    generic map (
      N         => N,
      RESET_VAL => RESET_VAL)
    port map (
      clk_i         => clk_i,
      reset_i       => reset_i,
      shift_nLoad_i => shift_nLoad_i,
      shift_en_i    => shift_en_i,
      serial_i      => serial_i,
      serial_o      => serial_o,
      data_i        => data_i,
      data_o        => data_o);

  -- clock generation
  Clk <= not Clk after 10 ns;

  -- waveform generation
  WaveGen_Proc: process
  begin
    -- insert signal assignments here

    wait until Clk = '1';
  end process WaveGen_Proc;

  

end architecture behaviour;

-------------------------------------------------------------------------------

configuration shift_reg_tb_behaviour_cfg of shift_reg_tb is
  for behaviour
  end for;
end shift_reg_tb_behaviour_cfg;

-------------------------------------------------------------------------------

-------------------------------------------------------------------------------

entity shift_reg_tb is

end entity shift_reg_tb;

-------------------------------------------------------------------------------
